body{

    font-family: Arial, Helvetica, sans-serif;
    font-weight: 200;
    font-size: 10px;
    color:rgb(92, 40, 16);
    background-color:rgba(245, 245, 245, 0.849);

}

/*

La propiedad font-family define una lista de fuentes o familias de fuentes, con un orden de prioridad, para utilizar en un elemento seleccionado. A diferencia de la mayoría de las propiedades CSS, los valores se separan con comas (",") para indicar que son valores alternativos.

La propiedad font-weight de CSS especifica el peso o grueso de la letra. Algunos tipos de letra sólo están disponibles en normal y bold.

La propiedad font-size especifica la dimensión de la letra. Este tamaño puede, a su vez, alterar el aspecto de alguna otra cosa, ya que se usa para calcular la longitud de las unidades em y ex.

La propiedad de CSS color selecciona el valor de color de primer plano del contenido de elemento de texto y decoraciones de texto. Tambien establece el valor currentcolor (en-US) que se puede usar como un valor indirecto en otras propiedades, y es el valor predeterminado para otras propiedades de color, como border-color.

Background-color es un propiedad de CSS que define el color de fondo de un elemento, puede ser el valor de un color o la palabra clave transparent.

*/

h1{

    text-transform: uppercase;

}

/*

La propiedad CSS text-transform especifica el cambio entre mayúsculas y minúsculas del texto de un elemento. Puede ser usada para que un texto aparezca completamente en mayúsculas, en minúsculas, o con la primera letra de cada palabra en mayúscula.

*/

h1 span{

    color:rgb(173, 0, 38);

}

#hombreAvatarHeader{

    text-align: center;
    border-bottom-color: darkblue;
    border-bottom-width: 10px;
    border-bottom-style:groove;

}

/*

La propiedad border-bottom-color define el color del borde inferior de un elemento, con la ayuda de un valor de color o con la palabra clave transparent.

Border-bottom-width define el ancho del borde inferior de una caja.

Border-bottom-style define el estilo de línea del borde inferior de una caja.

*/

#hombreAvatar img{

    width: 200px;
    height: 200px;
    border-radius: 25%;

}

/*

La propiedad CSS width especifica la anchura del area de contenido de un elemento. De forma predeterminada, establece el ancho del área de contenido, pero si el box-sizing se establece en border-box, establece el ancho del área del borde.

La propiedad CSS height especifica la altura de un elemento. Por defecto, la propiedad define la altura del área de contenido. Sin embargo, si box-sizing está configurado como border-box, determina la altura del área de borde.

The border-radius CSS property rounds the corners of an element's outer border edge. You can set a single radius to make circular corners, or two radii to make elliptical corners.

*/

.container{

    max-width: 1000px;
    margin-top: 80px;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 40px;

}

/*

Las propiedades min-width y max-width (en-US) sobreescriben el width.

La propiedad CSS margin establece el margen para los cuatro lados. Es una abreviación para evitar tener que establecer cada lado por separado con las otras propiedades de margen.
El margin-bottom CSS (margen-inferior) es la propiedad de un elemento que establece el espacio requerido en la parte inferior de un elemento. Tambien se permiten valores negativos.

*/

.menu ul{

    text-align: center;
    margin: auto;
    padding: 0%;
    list-style-type: none;

}

/*

La propiedad abreviada de CSS padding establece el área de relleno en los cuatro lados de un elemento a la vez.

El tipo de estilo de lista especifica la apariencia del listado.

*/

.menu ul li{

    display:inline-block;
    position: relative;

}

/*

La propiedad CSS display especifica si un elemento es tratado como block or inline element y el diseño usado por sus hijos, como flow layout(Diseño de Flujo), grid(Cuadricula) o flex(Flexible).

Formalmente la propiedad display establece los tipos de visualización interna y externa de un elemento. La tipo externa establece la participacion de un elemento en flow layout; la tipo interna establece el layout(Diseño) de los hijos. Algunos valores de display estan totalmente definidos con sus especificaciones propias; por ejemplo el detalle de que pasa cuando display: flex es declarado y definido en la especificacion de Modelo Flexible de Caja(Flexible Box Model specification) de CSS. Vea la siguientes tablas para mas especificaciones individuales.

Además de los Diferentes Tipos de caja de Visualizacion, el valor de none permite Desactivar la Visualizacion DE UN Elemento; cuando no se utiliza none, todos los elementos descendentes también quedan desactivados. El documento se procesa como si el elemento no existiera en el árbol de documentos.

*/


.menu ul li a{

    background-color: black;
    color: aliceblue;
    font-size: 10px;
    text-decoration: none;
    display: block;
    padding: 10px;

}

.menu ul li ul{

    position: absolute;
    top: 25px;
    left: 0;
    list-style-type: none;
    display: none;
    height: auto;

}

.menu ul li:hover ul{

    display: block;

}

.menu ul li ul li{

    display: block;
    width: 50px;
    height: 20px;
    margin: 0;
    text-align: left;

}

/*Fin de header*/

h2{

    color: black;
    text-transform: uppercase;

}

h2::before{

    content: "//";

}

.clearfix:before, .clearfix:after{

    display: table;
    line-height: 1;
    content: "";

}

.pull-left{

    float: left;

}

.row{

    padding-left: 10px;
    padding-right: 10px;

}

.col-60{

    width: 60%;

}

.col-10{

    width: 10%;

}

.education ul{

    list-style: none;
    margin: 0;
    padding: 0;

}

    .education .year{

        font-size: 1.1em;
        font-weight: bold;

    }

    .education .description{

        background: #EEEEEE;
        border-bottom: 1px solid #DDDDDD;
        padding: 10px;
        margin-bottom: 10px;
        position: relative;
        box-sizing: border-box;

    }

    .education .description h3, .education .description p{

        margin-top: 0;
        margin-bottom: 0;

    }

    .education .description p::after{

        content: "";
        position: absolute;
        border: 8px solid transparent;
        border-right: 8px solid #EEEEEE;
        top: 5px;
        left: -16px;

    }

    .experience .job .place{

        font-size: 1.2em;
        font-weight: bold;

    }

    .year{

        font-size: 0.8em;

    }

    .profesion{

        margin-top: 0;
        margin-bottom: 0;
        margin-left: 3em;
        font-size: 0.9em;
        text-align: justify;

    }

    .description{

        margin-top: 0;
        margin-left: 3em;
        text-align: justify;

    }

    /*

    .containerskills{

        width: 100%;
        background-color: #ddd;

    }

        .skills{

            text-align: right;
            padding-top: 10px;
            padding-bottom: 10px;
            color: white;

        }

    */

        .Java{

            color: #DDDDDD;
            margin: 3px;
            list-style-type: none;
            text-align: right;
            width: 25%;
            background-color: #04AA6D;

        }

        .HTML{

            color: #DDDDDD;
            margin: 3px;
            list-style-type: none;
            text-align: right;
            width: 40%;
            background-color: #2196F3;

        }

        .JavaScript{

            color: #DDDDDD;
            margin: 3px;
            list-style-type: none;
            text-align: right;
            width: 20%;
            background-color: #f44336;

        }

        .Python{

            color: #DDDDDD;
            margin: 3px;
            list-style-type: none;
            text-align: right;
            width: 10%;
            background-color: #808080;

        }

.icon-star-grey{

    background: url(../image/star-grey.png)no-repeat;
    width: 110px;
    height: 14px;
    float: right;

}

.icon-star-red{

    background: url(../image/star-red.png)no-repeat;
    width: 110px;
    height: 14px;
    float: right;

}

.obj-star{

    margin: 5px;
    padding: 5px;
    border-bottom: 5px;

}

.hobby{

    background: #ba190a;
    color: #fafafa;
    padding: 8px;
    font-size: 0.6em;

}